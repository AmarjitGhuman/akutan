// Copyright 2019 eBay Inc.
// Primary authors: Simon Fell, Diego Ongaro,
//                  Raymond Kroeker, and Sathish Kandasamy.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package cmp

import (
    "testing"

	"github.com/cheekybits/genny/generic"
    "github.com/stretchr/testify/assert"
)

type Scalar generic.Type

// testScalarValues is a test helper that will exercise the functions for Scalar
// if supplied with a list of values of incresing value
func testScalarValues(t *testing.T, v []Scalar) {
	for i := range v {
		assert.Equal(t, v[i], MaxScalar(v[0], v[i]))
		assert.Equal(t, v[i], MaxScalar(v[i], v[0]))
		if i > 0 {
			assert.Equal(t, v[i-1], MaxScalar(v[0], v[1:i]...))
		}
		assert.Equal(t, v[i], MaxScalar(v[i]))

		assert.Equal(t, v[0], MinScalar(v[0], v[i]))
		assert.Equal(t, v[0], MinScalar(v[i], v[0]))
		assert.Equal(t, v[i], MinScalar(v[i], v[i:]...))

		assert.True(t, ContainsScalar(v, v[i]))
		assert.False(t, ContainsScalar(v[i+1:], v[i]))
	}
}